package com.realmofthecelestials.realmofthecelestials.worldgen;

import com.realmofthecelestials.realmofthecelestials.RealmoftheCelestials;
import net.minecraft.core.Holder;
import net.minecraft.core.registries.Registries;
import net.minecraft.data.worldgen.BootstrapContext;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.level.levelgen.VerticalAnchor;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.placement.HeightRangePlacement;
import net.minecraft.world.level.levelgen.placement.PlacedFeature;
import net.minecraft.world.level.levelgen.placement.PlacementModifier;

import java.util.List;

public class ModPlacedFeatures {
    //用途: 將 ConfiguredFeatures 實際放置到世界中。
    //功能:定義特徵的具體放置位置和條件，例如在何種高度、何種地形上生成。 可以使用多個放置條件來控制特徵的生成，例如在特定的生物群系中或在特定的氣候條件下。
    //generated by monica

    public static final ResourceKey<PlacedFeature> SPARKLING_ORE_PLACED_KEY = registerKey("sparkling_ore_placed");

    public static void bootstrap(BootstrapContext<PlacedFeature> context){
        //CF -> PF -> BM
        var configuresFeatures = context.lookup(Registries.CONFIGURED_FEATURE);

        register(context, SPARKLING_ORE_PLACED_KEY, configuresFeatures.getOrThrow(ModConfiguredFeatures.OVERWORLD_SPARKLING_ORE_KEY),
                ModOrePlacement.commonOrePlacement(16,
                        HeightRangePlacement.triangle(VerticalAnchor.absolute(-64), VerticalAnchor.absolute(128))));
                        //triangle : max(生成機率) in maxHigh + minHigh
    }

    public static ResourceKey<PlacedFeature> registerKey(String name){
        return ResourceKey.create(Registries.PLACED_FEATURE, ResourceLocation.fromNamespaceAndPath(RealmoftheCelestials.MOD_ID, name));
    }

    private static void register(BootstrapContext<PlacedFeature> context,
                                 ResourceKey<PlacedFeature> key, Holder<ConfiguredFeature<?, ?>> configuration,
                                 List<PlacementModifier> modifiers){

        context.register(key, new PlacedFeature(configuration, List.copyOf(modifiers)));
    }
}
