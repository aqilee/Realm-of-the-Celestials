package com.realmofthecelestials.realmofthecelestials.worldgen;

import com.realmofthecelestials.realmofthecelestials.RealmoftheCelestials;
import com.realmofthecelestials.realmofthecelestials.block.ModBlocks;
import net.minecraft.core.registries.Registries;
import net.minecraft.data.worldgen.BootstrapContext;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.BlockTags;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.feature.Feature;
import net.minecraft.world.level.levelgen.feature.configurations.FeatureConfiguration;
import net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration;
import net.minecraft.world.level.levelgen.structure.templatesystem.BlockMatchTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest;
import net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest;

import java.util.List;

public class ModConfiguredFeatures {
    //用途: 定義特定的特徵，例如樹木、礦石、植物等的生成規則。
    //功能: 允許開發者設定生成的特徵，包括其形狀、大小和其他屬性。 可以用於創建自定義的自然生成物件。
//generated by monica

    //先生在主世界測試，沒問題再去神域
    public static final ResourceKey<ConfiguredFeature<?, ?>> OVERWORLD_SPARKLING_ORE_KEY = registerKey("sparkling_ore");

    public static void bootstrap(BootstrapContext<ConfiguredFeature<?, ?>> context){
        //CF -> PF -> BM
        RuleTest stoneReplacesables = new TagMatchTest(BlockTags.STONE_ORE_REPLACEABLES);
        RuleTest deepslateReplacesables = new TagMatchTest(BlockTags.DEEPSLATE_ORE_REPLACEABLES);
        RuleTest netherrackReplacesables = new BlockMatchTest(Blocks.NETHERRACK);
        RuleTest endReplacesables = new BlockMatchTest(Blocks.END_STONE);

        List<OreConfiguration.TargetBlockState> overworldSparklingOres = List.of(
                OreConfiguration.target(stoneReplacesables, ModBlocks.SPARKLING_ORE.get().defaultBlockState()),
                OreConfiguration.target(deepslateReplacesables, ModBlocks.SPARKLING_ORE.get().defaultBlockState())
        );

        register(context, OVERWORLD_SPARKLING_ORE_KEY, Feature.ORE, new OreConfiguration(overworldSparklingOres, 8));
    }

    public static ResourceKey<ConfiguredFeature<?, ?>> registerKey(String name){
        return ResourceKey.create(Registries.CONFIGURED_FEATURE, ResourceLocation.fromNamespaceAndPath(RealmoftheCelestials.MOD_ID, name));
    }

    private static <FC extends FeatureConfiguration, F extends Feature<FC>> void register(BootstrapContext<ConfiguredFeature<?, ?>> context,
                                                                                          ResourceKey<ConfiguredFeature<?, ?>> key, F feature, FC configuration){
        context.register(key, new ConfiguredFeature<>(feature, configuration));
    }
}
